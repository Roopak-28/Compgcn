name: Elliptic Data Statistics
description: Loads a PyTorch Geometric data file, prints summary statistics, and outputs it unchanged.

inputs:
  - {name: data_path, type: String, description: "Input .pt file path for PyG Data object"}

outputs:
  - {name: output_path, type: String, description: "Output .pt file path (copied/unchanged)", path: "{output_path}"}

implementation:
  container:
    image: python:3.9
    command:
      - sh
      - -c
      - |
        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet torch || \
        PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet torch --user
        exec "$0" "$@"
      - python3
      - -u
      - -c
      - |
        import torch
        import argparse
        import os
        import shutil

        parser = argparse.ArgumentParser()
        parser.add_argument('--data_path', type=str, required=True)
        parser.add_argument('--output_path', type=str, required=True)
        args = parser.parse_args()

        data = torch.load(args.data_path)

        print("Elliptic Data Statistics:")
        print(f"  Number of nodes: {data.num_nodes}")
        print(f"  Number of edges: {data.num_edges}")
        print(f"  Number of features: {data.num_features}")

        # Copy the data file to the output (for pipeline chaining)
        os.makedirs(os.path.dirname(args.output_path), exist_ok=True)
        shutil.copyfile(args.data_path, args.output_path)
        print(f"Output data copied to {args.output_path}")

    args:
      - --data_path
      - {inputValue: data_path}
      - --output_path
      - {outputPath: output_path}

